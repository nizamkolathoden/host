[{"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/index.js":"1","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/reportWebVitals.js":"2","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/App.js":"3","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/reducer/Usereucer.js":"4","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Authentication/Auth.js":"5","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/discard/Discard.js":"6","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentAdd/StudentAdd.js":"7","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/editStudent/EditStudent.js":"8","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Admin/Admin.js":"9","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Landing/Landing.js":"10","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Authentication/AuthSection.js":"11","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/editStudent/Deletefile.js":"12","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Authentication/AuthForm.js":"13","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentAdd/StudentAddForm.js":"14","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Admin/Newuser.js":"15","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/editStudent/EditForm.js":"16","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/Nav.js":"17","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/StudentNav.js":"18","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Footer/Footer.js":"19","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Addbutton/Addbutton.js":"20","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentCard/StudentCard.js":"21","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentAdd/key.js":"22","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/Option.js":"23","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/Menu.js":"24"},{"size":500,"mtime":1660538872391,"results":"25","hashOfConfig":"26"},{"size":362,"mtime":1660538872391,"results":"27","hashOfConfig":"26"},{"size":1951,"mtime":1660538872372,"results":"28","hashOfConfig":"26"},{"size":270,"mtime":1660538872391,"results":"29","hashOfConfig":"26"},{"size":326,"mtime":1660538872386,"results":"30","hashOfConfig":"26"},{"size":199,"mtime":1660538872390,"results":"31","hashOfConfig":"26"},{"size":321,"mtime":1660538872388,"results":"32","hashOfConfig":"26"},{"size":392,"mtime":1660538872390,"results":"33","hashOfConfig":"26"},{"size":626,"mtime":1660538872385,"results":"34","hashOfConfig":"26"},{"size":1899,"mtime":1660589377708,"results":"35","hashOfConfig":"26"},{"size":1905,"mtime":1660538872386,"results":"36","hashOfConfig":"26"},{"size":1226,"mtime":1660589377708,"results":"37","hashOfConfig":"26"},{"size":2598,"mtime":1660589377708,"results":"38","hashOfConfig":"26"},{"size":25435,"mtime":1660589377709,"results":"39","hashOfConfig":"26"},{"size":2127,"mtime":1660589377708,"results":"40","hashOfConfig":"26"},{"size":29296,"mtime":1660589377709,"results":"41","hashOfConfig":"26"},{"size":311,"mtime":1660538872387,"results":"42","hashOfConfig":"26"},{"size":462,"mtime":1660538872388,"results":"43","hashOfConfig":"26"},{"size":285,"mtime":1660538872386,"results":"44","hashOfConfig":"26"},{"size":400,"mtime":1660538872385,"results":"45","hashOfConfig":"26"},{"size":1077,"mtime":1660538872389,"results":"46","hashOfConfig":"26"},{"size":153,"mtime":1660538872389,"results":"47","hashOfConfig":"26"},{"size":880,"mtime":1660538872388,"results":"48","hashOfConfig":"26"},{"size":4981,"mtime":1660589377728,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"183bw7v",{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"74"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/index.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/reportWebVitals.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/App.js",["101","102"],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/reducer/Usereucer.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Authentication/Auth.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/discard/Discard.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentAdd/StudentAdd.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/editStudent/EditStudent.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Admin/Admin.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Landing/Landing.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Authentication/AuthSection.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/editStudent/Deletefile.js",[],["103","104"],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Authentication/AuthForm.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentAdd/StudentAddForm.js",["105","106","107","108","109"],"import React, { useRef, useState } from 'react'\nimport classes from './StudentAdd.module.css'\nimport { cloud } from './key'\nimport {useHistory} from 'react-router-dom'\nconst StudentAddForm = () => {\n   \n  let pic\n  const [bValue, setBValue] = useState('Submit');\n  const [admno, setAdmno] = useState('')\n\n\n\n  //form data\n  const [lName, setLname] = useState('');\n  const [fName, setFname] = useState('')\n  const [mob1, setMob1] = useState('');\n  const [mob2, setMob2] = useState('');\n  const [dob, setDob] = useState('')\n  const [sex, setSex] = useState('')\n const [bloodGroup,setBloodGroup] = useState('')\n const [admissionSecured,setAdmissionSecured] = useState('')\n  const [nameOfGuardian, setNameofGurdian] = useState('');\n  //address\n  const [homeName, setHomename] = useState('');\n  const [pincode, setPincode] = useState('');\n  const [post, setPost] = useState('');\n  const [city, setCity] = useState('');\n\n  const [relationGuardin, setRelationGuardin] = useState('');\n  const [occupationOfGuardian, setOccuptinofGurdian] = useState('');\n  const [ageOfGuardian, setAgeOfGuardian] = useState('')\n  const [course,setCourse] = useState('')\nconst [sem,setSem] = useState('')\n  let batch\n  const [sslc, setSslc] = useState('');\n  const [email, setEmail] = useState('');\n  const [hss, setHss] = useState('');\n  const [etcActivity, setEtcActivity] = useState([])\n  let etc = []\n  const [residence,setResidence] = useState('')\n  const [religion, setReligion] = useState('');\n  const [cast, setCast] = useState('');\n  const [prevShool, setPrevshool] = useState('');\n\n  const [recommanted, setRecommanted] = useState('');\n  const [responsibleGuardianName, setResponsibleGuardianName] = useState('');\n  const [responsibleGuardianAge, setResponsibleGuardianAge] = useState('');\n  const [responsibleGuardianMob, setResponsibleGuardianMob] = useState('');\n  const [responsibleGuardianRelation, setResponsibleGuardianRelation] = useState('');\n  const [responsibleGuardianOccupation, setresponsibleGuardianOccupation] = useState('');\n  const [specialAchiev, setSpecialAchiev] = useState('');\n  const [maritalStatus, setMaritalStatus] = useState(Boolean);\n  const [specialProblem, setSpecialProblem] = useState('');\n  const [from, setFrom] = useState('')\n  const [to, setTo] = useState('')\n  const [prevCourse, setPrevCourse] = useState('')\n\n\n\n  const token = localStorage.getItem('mascStudetDb');\n\n  const postData = () => {\n    if (pic) {\n\n      console.log(bloodGroup);\n      console.log(admissionSecured);\n      fetch('http://localhost:8000:8000/student/newstudent', {\n        method: 'Post',\n        headers: {\n          'Content-Type': 'application/json',\n          \"authorization\": token.replace(/['\"]+/g, '')\n        },\n        body: JSON.stringify({\n          lName,\n          fName,\n          course,\n          sex,\n          sem,\n          mob1,\n          mob2,\n          bloodGroup,\n          dob,\n          nameOfGuardian,\n          occupationOfGuardian,\n          batch,\n          sslc,\n          pic,\n          homeName,\n          pincode,\n          post,\n          city,\n          relationGuardin,\n          religion,\n          prevShool,\n          residence,\n          recommanted,\n          responsibleGuardianName,\n          responsibleGuardianAge,\n          responsibleGuardianMob,\n          responsibleGuardianRelation,\n          ageOfGuardian,\n          hss,\n          etcActivity,\n          cast,\n          responsibleGuardianOccupation,\n          specialAchiev,\n          maritalStatus,\n          specialProblem,\n          prevCourse,\n          admissionSecured,\n          email,\n          admno\n        })\n      }).then(res => res.json()).then(responce => {\n        if (responce.error) {\n          alert(responce.error)\n          setBValue('Submit')\n        }\n        else {\n          console.log(responce);\n          alert('student added sucessfuly');\n          setBValue('Submit')\n          setFname('');\n          setLname('');\n          setImage({});\n          setHomename('');\n          setPost('');\n          pic = ''\n          setPincode('');\n          setCity('');\n          setEmail('');\n          setCity('');\n          setMob1('');\n          setMob2('');\n          setDob('')\n\n        }\n      }).catch(e => {\n        console.log(e);\n      })\n    } else {\n      alert('select a photo')\n    }\n  }\n  const postPic = () => {\n    setBValue('Uploading...')\n    //formdata object ||Currently its empty and more clarification go and read mozila doc you will understand much more about Formdata()\n    console.log('in upload', image.imageUrl);\n    const data = new FormData()\n\n    //append the image with key value pair image is above const image \n    data.append('file', image.imageUrl)\n\n    //put name of cloud upload/project name read cloudinary docs\n    data.append('upload_preset', cloud.uploadPreset);\n\n    //put name of cloud \n    data.append('cloud_name', cloud.cloudName)\n\n    //cloud base api insted fetch you can use axios like 3rd party libary\n    fetch(cloud.fetch, {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      pic = data.secure_url;\n      if (pic) {\n        postData()\n      }\n\n\n    }).catch(e => {\n      console.log('error in upload', e)\n      alert('something went wrong plz connect internet')\n    })\n  }\n\n\n\n  const [image, setImage] = useState({\n    imageUrl: undefined,\n    errormsg: undefined,\n    errorFixInfo: undefined,\n  });\n  const ImageHandler = (e) => {\n    if (e.target.files[0]?.size) {\n      const fileSize = e.target.files[0].size;\n      if (fileSize > 100000) {\n        setImage({\n          errormsg: \"oops!! file too large\",\n          errorFixInfo: \"max image size 100kb\",\n        });\n      } else {\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          if (reader.readyState === 2) {\n            console.log(reader);\n            const imageGet = reader.result;\n            setImage({ imageUrl: imageGet });\n          }\n        };\n        if (e.target.files[0]) {\n          reader.readAsDataURL(e.target.files[0]);\n        }\n      }\n    }\n  };\n  const profileclick = useRef();\n\n  const ProfileClickFun = () => {\n    profileclick.current.click();\n  }\n  return (\n\n    <div className={classes.StudentAddForm}>\n      <div className={classes.Form}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n\n            console.log('clicked', e.target);\n          \n            batch = from + '/' + to\n            console.log('add', admissionSecured, 'res', residence, 'sem', sem, 'batch', batch, 'dobs',\n              dob, 'sex', sex, 'etc', etc,'blood',bloodGroup);\n\n            if (!e.target[0].value) alert('select  photo')\n            else {\n               setBValue('Uploading...')\n               postPic()\n\n              //  postData()\n            }\n\n\n\n          }} className={classes.RealForm}>\n          <div onClick={ProfileClickFun} className={classes.ProfilePic}>\n            <img className={classes.Image} src={image.imageUrl} alt={null} />\n          </div>\n          <p className={classes.Errormsg}>\n            {image.errormsg}<br />\n            {image.errorFixInfo}\n          </p>\n          <input\n            className={classes.profilePictureAdd}\n            type=\"file\"\n            onChange={ImageHandler}\n            accept=\"image/*\"\n            ref={profileclick} />\n\n          <div className={classes.Fields}>\n            <p className={classes.MainHead}>Personal Info</p>\n            <label htmlFor=\"firstName\"\n              className={classes.InputField} >FirstName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={fName}\n              onChange={e => setFname(e.target.value)}\n            />\n\n            <label htmlFor=\"secondName\"\n              className={classes.InputField} >SecondName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n\n              value={lName}\n              onChange={e => setLname(e.target.value)}\n            />\n\n            <label htmlFor=\"nameOfParent\"\n              className={classes.InputField} >ParentName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n\n              value={nameOfGuardian}\n              onChange={e => setNameofGurdian(e.target.value)}\n            />\n\n            <label htmlFor=\"Homename\"\n              className={classes.InputField} >House Name</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={homeName}\n              onChange={e => setHomename(e.target.value)}\n\n            />\n\n            <label htmlFor=\"Post\"\n              className={classes.InputField} >Post</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={post}\n              onChange={e => setPost(e.target.value)}\n\n            />\n\n            <label htmlFor=\"City\"\n              className={classes.InputField} >City</label>\n            <input type=\"text\"\n              /*  pattern=\"[A-Za-z]\" */\n              required\n\n              value={city}\n              onChange={e => setCity(e.target.value)}\n            />\n\n            <label htmlFor=\"Pincode\"\n              className={classes.InputField} >Pin-Code</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */            required\n              value={pincode}\n              onChange={e => setPincode(e.target.value)}\n\n            />\n\n            <label htmlFor=\"mobilenumber\"\n              className={classes.InputField} >Mobile Number</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */            required\n              value={mob1}\n              onChange={e => setMob1(e.target.value)}\n            />\n\n            <label htmlFor=\"altmobileNumber\"\n              className={classes.InputField} >Mobile Number(Optional)</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */\n\n              value={mob2}\n              onChange={e => setMob2(e.target.value)}\n            />\n\n            <label htmlFor=\"dob\"\n              className={`${classes.InputField} ${classes.Dateofbirth}`} >DOB</label>\n\n            <input type=\"date\"\n              required\n\n              value={dob}\n              onChange={e => {\n\n                setDob(e.target.value)\n                console.log('dobs', dob);\n              }}\n            /> \n\n            \n            <p>Sex</p>\n            <div className={classes.sexField}>\n              <label  htmlFor=\"sexinputm\"\n                className={classes.InputField} >\n                <input\n                  id=\"sexinputm\"\n                  type=\"radio\"\n                  value=\"Male\"\n                  name=\"sex\"\n                  required\n\n                  onClick={(e) => {\n\n                    setSex(e.target.value)\n                    console.log('male', sex)\n                  }}\n                />\n        Male\n        </label>\n\n              <label htmlFor=\"sexinputf\"\n                className={classes.InputField}  >\n                <input\n                  id=\"sexinputf\"\n                  type=\"radio\"\n                  value=\"Female\"\n                  name=\"sex\"\n                  required\n\n                  onClick={(e) => {\n\n                    setSex(e.target.value)\n                    console.log('male', sex)\n                  }}\n                />\n        Female\n        </label>\n            </div>\n\n            <label htmlFor=\"bloodGroup\"\n              className={`${classes.InputField} ${classes.Dateofbirth}`} >Blood Group</label>\n            <select required  onClick={e=>{\n              setBloodGroup(e.target.value)\n            }} >\n            <option value=\"\"></option>\n              <option value=\"A+ (Positive)\">A+ (Positive)</option>\n              <option value=\"A- (Negative)\">A- (Negative)</option>\n              <option value=\"B+ (Positive)\">B+ (Positive)</option>\n              <option value=\"B- (Negative)\">B- (Negative)</option>\n              <option value=\"O+ (Positive)\">O+ (Positive)</option>\n              <option value=\"O- (Negative)\">O- (Negative)</option>\n              <option value=\"AB+ (Positive)\">AB+ (Positive)</option>\n              <option value=\"AB- (Negative)\">AB- (Negative)</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"residence\"\n              className={classes.InputField} >Residence</label>\n            <select required  onClick={e=>{\n              setResidence(e.target.value)\n            }}>\n            <option value=\"\"></option>\n              <option value=\"With Parent\">With Parent</option>\n              <option value=\"With Relatives\">With Relatives</option>\n              <option value=\"College Hostel\">College Hostel</option>\n              <option value=\"Lodge\">Lodge</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"relationshipwithguardien\"\n              className={classes.InputField} >Relationship With Guardian</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              value={relationGuardin}\n              onChange={e => {\n\n                setRelationGuardin(e.target.value)\n              }}\n\n              required />\n\n            <label htmlFor=\"Ocupationofguardien\"\n              className={classes.InputField} >Ocupation of Guardien</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              value={occupationOfGuardian}\n              onChange={e => {\n\n                setOccuptinofGurdian(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"religion\"\n              className={classes.InputField} >Religion</label>\n            <input type=\"text\"\n              required\n\n              value={religion}\n              onChange={e => {\n\n                setReligion(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"cast\"\n              className={classes.InputField} >Cast</label>\n            <input type=\"text\"\n              required\n\n              value={cast}\n              onChange={e => {\n\n                setCast(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"mail\"\n              className={classes.InputField} >E-Mail</label>\n            <input type=\"mail\"\n\n              value={email}\n              onChange={e => {\n\n                setEmail(e.target.value)\n\n              }}\n            />\n\n            <p>Martial Status</p>\n            <div className={classes.martialstatus}>\n              <label htmlFor=\"martialt\"\n                className={classes.InputField} >\n                <input\n                  id=\"martialt\"\n                  type=\"radio\"\n                  value=\"True\"\n                  name=\"martial\"\n                  required\n\n                  onClick={() => setMaritalStatus(true)}\n                />\n        True\n        </label>\n\n              <label  htmlFor=\"martialf\"\n                className={classes.InputField} >\n                <input\n                  id=\"martialf\"\n                  type=\"radio\"\n                  value=\"False\"\n                  name=\"martial\"\n                  required\n\n                  onClick={() => {\n                    setMaritalStatus(false)\n                    console.log(maritalStatus);\n                  }}\n                />\n        False\n        </label>\n            </div>\n\n            <label htmlFor=\"specialproblem\"\n              className={classes.InputField} >Special Problem</label>\n            <input type=\"text\"\n\n              value={specialProblem}\n              onChange={e => {\n                setSpecialProblem(e.target.value)\n              }}\n            />\n\n            <p className={classes.MainHead}>Responsible Guardian Info</p>\n\n            <label htmlFor=\"name\"\n              className={classes.InputField} >Name</label>\n            <input type=\"text\"\n\n              value={responsibleGuardianName}\n              onChange={e => {\n                setResponsibleGuardianName(e.target.value)\n              }}\n\n              required\n            />\n\n            <label htmlFor=\"relationship\"\n              className={classes.InputField} >Relationship</label>\n            <input type=\"text\"\n              required\n              value={responsibleGuardianRelation}\n              onChange={e => {\n                setResponsibleGuardianRelation(e.target.value)\n              }}\n            />\n\n            <label htmlFor=\"age\"\n              className={classes.InputField} >Age</label>\n            <input type=\"number\"\n              value={responsibleGuardianAge}\n              onChange={e => {\n                setResponsibleGuardianAge(e.target.value)\n              }}\n              required\n            />\n\n            <label htmlFor=\"guardianmobno\"\n              className={classes.InputField} >Mobile Number</label>\n            <input type=\"number\"\n              required\n              value={responsibleGuardianMob}\n              onChange={e => {\n                setResponsibleGuardianMob(e.target.value)\n              }}\n            />\n\n            <label htmlFor=\"occupation\"\n              className={classes.InputField} >Occupation</label>\n            <input type=\"text\"\n            onChange={e=>setresponsibleGuardianOccupation(e.target.value)}\n            />\n\n            <p className={classes.MainHead}>Qualification Info</p>\n\n            <p>Extra Curricular Activities</p>\n            <div className={classes.extrac}>\n              <label htmlFor=\"extracA\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracA\"\n                  type=\"checkbox\"\n                  value=\"Arts\"\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n\n                    console.log('etc', etc);\n                  }}\n\n                />\n        Arts\n        </label>\n\n              <label  htmlFor=\"extracS\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracS\"\n                  type=\"checkbox\"\n                  value=\"Sports\"\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n                    console.log('etc', etc);\n\n                  }}\n                />\n        Sports\n        </label>\n\n              <label  htmlFor=\"extracN\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracN\"\n                  type=\"checkbox\"\n                  value=\"NCC\"\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n                    console.log('etc', etc);\n\n                  }}\n                />\n        NCC\n        </label>\n\n              <label htmlFor=\"extracSS\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracSS\"\n                  type=\"checkbox\"\n                  value=\"NSS\"\n                  name=\"extrac\"\n                  onChange={async e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n\n                    console.log('etc', etc, 'a', etcActivity);\n                  }}\n                />\n        NSS\n        </label>\n            </div>\n\n            <label htmlFor=\"SpecialAchievments\"\n              className={classes.InputField} >Special Achievments</label>\n            <input type=\"text\"\n              value={specialAchiev}\n              onChange={e => setSpecialAchiev(e.target.value)}\n            />\n\n            <label  htmlFor=\"paper\"\n              className={classes.InputField} >SSLC/CBSE mark (%)\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={sslc}\n              onChange={e => setSslc(e.target.value)}\n            />\n\n            <label  htmlFor=\"sslcmark\"\n              className={classes.InputField} >HSE Paper (,)\n      </label>\n            <input\n              type=\"text\"\n              value={prevCourse}\n              onChange={e => setPrevCourse(e.target.value)}\n              required\n            />\n\n            <label htmlFor=\"hsemark\"\n              className={classes.InputField} >HSE/CBSE mark (%)\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={hss}\n              onChange={e => setHss(e.target.value)}\n            />\n\n\n            <label htmlFor=\"institution\"\n              className={classes.InputField} >Institution last attended\n      </label>\n            <input\n              type=\"text\"\n              value={prevShool}\n              onChange={e => setPrevshool(e.target.value)}\n              required\n            />\n\n            <p className={classes.MainHead}>Admission Info</p>\n\n            <label htmlFor=\"admissionsecured\"\n              className={classes.InputField}>admission secured</label>\n            <select required \n            \n            onClick={e=>{\n              setAdmissionSecured(e.target.value)\n            }}\n            >\n\n            <option value=\"\"></option>\n              <option value=\"Management\">Management</option>\n              <option value=\"Merit\">Merit</option>\n              <option value=\"Muslim\">Muslim</option>\n              <option value=\"SC/ST\">SC/ST</option>\n              <option value=\"OBC/OEC\">OBC/OEC</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"Course\"\n              className={classes.InputField}>Course</label>\n            <select required\n            \n            onClick={e=>{\n              setCourse(e.target.value)\n            }}\n            >\n            <option value=\"\"></option>\n              <option value=\"BSC computer science\">BSC computer science</option>\n              <option value=\"BSC Physics\">BSC Physics</option>\n              <option value=\"BSC Microbiology\">BSC Microbiology</option>\n              <option value=\"BSC Maths\">BSC Maths</option>\n              <option value=\"BSC Chemistry\">BSC Chemistry</option>\n              <option value=\"BCA\">BCA</option>\n              <option value=\"BBA\">BBA</option>\n              <option value=\"BCOM TT\">BCOM TT</option>\n              <option value=\"BCOM TT\">BCOM CA</option>\n              <option value=\"BCOM Finance)\">BCOM Finance</option>\n              <option value=\"BCOM Islamic Finance\">BCOM Islamic Finance</option>\n              <option value=\"BA Multimedia\">BA Multimedia</option>\n              <option value=\"BA Mass Communication\">BA Mass Communication</option>\n              <option value=\"BA English\">BA English</option>\n              <option value=\"BA Arabic\">BA Arabic</option>\n              <option value=\"BA Hindi\">BA Hindi</option>\n              <option value=\"BA Malayalam\">BA Malayalam</option>\n            </select>\n\n\n            <label htmlFor=\"Sem\"\n              className={classes.InputField}>Sem</label>\n            <select required \n            \n            onClick={e=>{\n              setSem(e.target.value)\n            }}\n            >\n\n            <option value=\"\"></option>\n              <option value=\"First\">First</option>\n              <option value=\"Second\">Second</option>\n              <option value=\"Third\">Third</option>\n              <option value=\"Fourth\">Fourth</option>\n              <option value=\"Fifth\">Fifth</option>\n              <option value=\"Sixth\">Sixth</option>\n            </select>\n            \n\n            <label  htmlFor=\"admno\"\n              className={classes.InputField} >Admission Number\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={admno}\n              onChange={e => setAdmno(e.target.value)}\n            />\n\n            <label  htmlFor=\"batch\"\n              className={classes.InputField} >Batch From\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={from}\n              onChange={e => setFrom(e.target.value)}\n            />\n\n            <label  htmlFor=\"batch\"\n              className={classes.InputField} >Batch To\n      </label>\n            <input\n              type=\"number\"\n              required\n              value={to}\n              onChange={e => setTo(e.target.value)}\n            />\n\n          </div>\n          <input type=\"submit\" value={bValue}\n            disabled={bValue === 'Uploading...' ? true : false}\n            className={classes.Submit} />\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default StudentAddForm\n\n","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Admin/Newuser.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/editStudent/EditForm.js",["110","111","112","113","114","115","116","117"],"import React, { useRef, useState, useEffect } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport classes from './EditStudent.module.css'\nimport { FaPen } from \"react-icons/fa\";\nimport { cloud } from '../StudentAdd/key'\nimport { useParams } from 'react-router-dom'\nconst StudentEditForm = () => {\n  const { id } = useParams()\n  const [editIco, setEditIco] = useState(false)\n  const history = useHistory()\n  let pic;\n  const [bValue, setBValue] = useState('Submit');\n  const [admno, setAdmno] = useState('');\n\n\n\n  //form data\n  const [lName, setLname] = useState('');\n  const [fName, setFname] = useState('')\n  const [mob1, setMob1] = useState('');\n  const [mob2, setMob2] = useState('');\n  const [dob, setDob] = useState('')\n  const [sex, setSex] = useState('')\n  // const [blood,setBlood] = useState('');\n  const [sub, setSub] = useState('')\n  const [bloodGroup, setBloodGroup] = useState('');\n  const [admissionSecured, setAdmissionSecured] = useState('')\n  const [nameOfGuardian, setNameofGurdian] = useState('');\n  //address\n  const [homeName, setHomename] = useState('');\n  const [pincode, setPincode] = useState('');\n  const [post, setPost] = useState('');\n  const [city, setCity] = useState('');\n\n  const [relationGuardin, setRelationGuardin] = useState('');\n  const [occupationOfGuardian, setOccuptinofGurdian] = useState('');\n  const [ageOfGuardian, setAgeOfGuardian] = useState('')\n  \n  const [sem,setSem] = useState('')\n  const [batch, setBatch] = useState('');\n  const [sslc, setSslc] = useState('');\n  const [email, setEmail] = useState('');\n  const [hss, setHss] = useState('');\n  const [etcActivity, setEtcActivity] = useState([])\n  let etc = []\n  const [residence, setResidence] = useState('')\n  const [religion, setReligion] = useState('');\n  const [cast, setCast] = useState('');\n  const [prevShool, setPrevshool] = useState('');\n\n  const [live, setLive] = useState('');\n  const [responsibleGuardianName, setResponsibleGuardianName] = useState('');\n  const [responsibleGuardianAge, setResponsibleGuardianAge] = useState('');\n  const [responsibleGuardianMob, setResponsibleGuardianMob] = useState('');\n  const [responsibleGuardianRelation, setResponsibleGuardianRelation] = useState('');\n  const [responsibleGuardianOccupation, setresponsibleGuardianOccupation] = useState('');\n  const [specialAchiev, setSpecialAchiev] = useState('');\n  const [maritalStatus, setMaritalStatus] = useState(Boolean);\n  const [specialProblem, setSpecialProblem] = useState('');\n\n  const [prevCourse, setPrevCourse] = useState('')\n\n  const Edit = () => {\n    setEditIco(!editIco)\n  }\n\n  const token = localStorage.getItem('mascStudetDb');\n\n  const postData = () => {\n\n\n    console.log(bloodGroup);\n    console.log(admissionSecured);\n    fetch('https://mascdb.herokuapp.com/student/editstudent', {\n      method: 'Put',\n      headers: {\n        'Content-Type': 'application/json',\n        \"authorization\": token.replace(/['\"]+/g, '')\n      },\n      body: JSON.stringify({\n        lName,\n        id,\n        fName,\n        course: sub,\n        sex,\n        sem,\n        mob1,\n        mob2,\n        bloodGroup,\n        dob,\n        nameOfGuardian,\n        occupationOfGuardian,\n        batch,\n        sslc,\n        homeName,\n        pincode,\n        post,\n        city,\n        relationGuardin,\n        religion,\n        prevShool,\n        residence,\n        responsibleGuardianName,\n        responsibleGuardianAge,\n        responsibleGuardianMob,\n        responsibleGuardianRelation,\n        ageOfGuardian,\n        hss,\n        etcActivity,\n        cast,\n        responsibleGuardianOccupation,\n        specialAchiev,\n        maritalStatus,\n        specialProblem,\n        prevCourse,\n        admissionSecured,\n        admno,\n        email\n      })\n    }).then(res => res.json()).then(responce => {\n      if (responce.error) alert(responce.error)\n\n      else {\n        console.log(responce);\n        alert('student updated sucessfuly');\n        history.push(\"/\")\n      }\n    }).catch(e => {\n      console.log(e);\n    })\n\n  }\n  const postPic = () => {\n    setBValue('Uploading...')\n    //formdata object ||Currently its empty and more clarification go and read mozila doc you will understand much more about Formdata()\n    console.log('in upload', image.imageUrl);\n    const data = new FormData()\n\n    //append the image with key value pair image is above const image \n    data.append('file', image.imageUrl)\n\n    //put name of cloud upload/project name read cloudinary docs\n    data.append('upload_preset', cloud.uploadPreset);\n\n    //put name of cloud \n    data.append('cloud_name', cloud.cloudName)\n\n    //cloud base api insted fetch you can use axios like 3rd party libary\n    fetch(cloud.fetch, {\n      method: \"post\",\n      body: data\n    }).then(res => res.json()).then(data => {\n      console.log(data);\n      pic = data.secure_url;\n      if (pic) {\n        postData()\n      }\n\n\n    }).catch(e => {\n      console.log('error in upload', e)\n      alert('something went wrong plz connect internet')\n    })\n  }\n\n  useEffect(() => {\n    console.log(id);\n    fetch(`https://mascdb.herokuapp.com/profile/${id}`, {\n      headers: {\n        'Content-Type': 'application/json',\n        \"authorization\": token.replace(/['\"]+/g, '')\n      }\n\n    }).then(res => res.json()).then(responce => {\n      console.log(responce);\n      setFname(responce.fName);\n      setLname(responce.lName);\n      setNameofGurdian(responce.nameOfGuardian);\n      setHomename(responce.addressOfGuardian.homeName);\n      setPost(responce.addressOfGuardian.post);\n      setCity(responce.addressOfGuardian.city);\n      setPincode(responce.addressOfGuardian.pincode);\n      setMob1(responce.mob1);\n      setMob2(responce.mob2);\n      setDob(responce.dob);\n      setSex(responce.sex)\n      setBloodGroup(responce.bloodGroup)\n      setResidence(responce.residence);\n      setRelationGuardin(responce.relationGuardin)\n      setOccuptinofGurdian(responce.occupationOfGuardian)\n      setReligion(responce.religion);\n      setCast(responce.cast);\n      setEmail(responce.email);\n      setSpecialProblem(responce.specialProblem);\n      setResponsibleGuardianName(responce.responsibleGuardian.name);\n      setResponsibleGuardianRelation(responce.responsibleGuardian.relation);\n      setResponsibleGuardianAge(responce.responsibleGuardian.age);\n      setResponsibleGuardianMob(responce.responsibleGuardian.mob);\n      setresponsibleGuardianOccupation(responce.responsibleGuardian.occupation);\n      setSpecialAchiev(responce.specialAchiev);\n      setSslc(responce.sslc)\n      setHss(responce.hss);\n      setPrevCourse(responce.prevCourse);\n      setPrevshool(responce.prevShool);\n      setAdmno(responce.admno);\n      setBatch(responce.batch)\n      setImage({\n        imageUrl: responce.pic\n      })\n\n      setMaritalStatus(responce.maritalStatus)\n      setSub(responce.course)\n      setAdmissionSecured(responce.admissionSecured);\n      setSem(responce.sem)\n\n    })\n\n  }, [])\n\n  const [image, setImage] = useState({\n    imageUrl: undefined,\n    errormsg: undefined,\n    errorFixInfo: undefined,\n  });\n  const ImageHandler = (e) => {\n    if (e.target.files[0]?.size) {\n      const fileSize = e.target.files[0].size;\n      if (fileSize > 100000) {\n        setImage({\n          errormsg: \"oops!! file too large\",\n          errorFixInfo: \"max image size 100kb\",\n        });\n      } else {\n\n        const reader = new FileReader();\n\n        reader.onload = () => {\n          if (reader.readyState === 2) {\n            console.log(reader);\n            const imageGet = reader.result;\n            setImage({ imageUrl: imageGet });\n          }\n        };\n        if (e.target.files[0]) {\n          reader.readAsDataURL(e.target.files[0]);\n        }\n      }\n    }\n  };\n  const saveBtn = useRef()\n\n  const profileclick = useRef();\n\n  const ProfileClickFun = () => {\n    profileclick.current.click();\n  }\n\n  const saveBtnActive = () => {\n    saveBtn.current.click()\n  }\n  return (\n\n    <div className={classes.StudentAddForm}>\n      <div className={classes.EditButton} onClick={() => {\n        Edit();\n        {\n          if (\n            editIco === true\n          )\n            saveBtnActive()\n        }\n      }} >\n        <FaPen size=\"20px\" color=\"#fafafa\" />\n      </div>\n      <div className={classes.Form}>\n        <form\n          onSubmit={(e) => {\n            e.preventDefault()\n            setBValue('Uploading...')\n            console.log('clicked', e.target);\n            console.log(e.target)\n\n\n            console.log('add', admissionSecured, 'res', residence, 'sem', sem, 'batch', batch, 'dobs',\n              dob, 'sex', sex, 'etc', etc);\n\n\n\n            // postPic()\n            postData()\n\n\n\n          }} className={classes.RealForm}>\n          <div onClick={ProfileClickFun} className={classes.ProfilePic}>\n            <img className={classes.Image} src={image.imageUrl} alt={null} />\n          </div>\n          <p className={classes.Errormsg}>\n            {image.errormsg}<br />\n            {image.errorFixInfo}\n          </p>\n          <input\n            className={classes.profilePictureAdd}\n            type=\"file\"\n            onChange={ImageHandler}\n            accept=\"image/*\"\n            ref={profileclick} />\n\n          <div className={classes.Fields}>\n            <p className={classes.MainHead}>Personal Info</p>\n            <label htmlFor=\"firstName\"\n              className={classes.InputField} >FirstName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              disabled={editIco ? false : true}\n              required\n              value={fName}\n              onChange={e => setFname(e.target.value)}\n            />\n\n            <label htmlFor=\"secondName\"\n              className={classes.InputField} >SecondName</label>\n            <input type=\"text\"\n              // pattern=\"[A-Za-z]\"\n              required\n              disabled={editIco ? false : true}\n              value={lName}\n              onChange={e => setLname(e.target.value)}\n            />\n\n            <label htmlFor=\"nameOfParent\"\n              className={classes.InputField} >ParentName</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              disabled={editIco ? false : true}\n              value={nameOfGuardian}\n              onChange={e => setNameofGurdian(e.target.value)}\n            />\n\n            <label htmlFor=\"Homename\"\n              className={classes.InputField} >House Name</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              disabled={editIco ? false : true}\n              value={homeName}\n              onChange={e => setHomename(e.target.value)}\n\n            />\n\n            <label htmlFor=\"Post\"\n              className={classes.InputField} >Post</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              required\n              disabled={editIco ? false : true}\n              value={post}\n              onChange={e => setPost(e.target.value)}\n\n            />\n\n            <label htmlFor=\"City\"\n              className={classes.InputField} >City</label>\n            <input type=\"text\"\n              /*  pattern=\"[A-Za-z]\" */\n              required\n              disabled={editIco ? false : true}\n              value={city}\n              onChange={e => setCity(e.target.value)}\n            />\n\n            <label htmlFor=\"Pincode\"\n              className={classes.InputField} >Pin-Code</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */            required\n              disabled={editIco ? false : true}\n              value={pincode}\n              onChange={e => setPincode(e.target.value)}\n\n            />\n\n            <label htmlFor=\"mobilenumber\"\n              className={classes.InputField} >Mobile Number</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */            required\n              disabled={editIco ? false : true}\n              value={mob1}\n              onChange={e => setMob1(e.target.value)}\n            />\n\n            <label htmlFor=\"altmobileNumber\"\n              className={classes.InputField} >Mobile Number(Optional)</label>\n            <input type=\"number\"\n              /* pattern=\"[0-9]\"\n   */\n              disabled={editIco ? false : true}\n              value={mob2}\n              onChange={e => setMob2(e.target.value)}\n            />\n\n            <label htmlFor=\"dob\"\n              className={`${classes.InputField} ${classes.Dateofbirth}`} >DOB</label>\n            <input type=\"date\"\n              required\n              disabled={editIco ? false : true}\n              value={dob}\n\n              onChange={e => {\n\n                setDob(e.target.value)\n                console.log('dobs', dob);\n              }}\n            />\n            <p>Sex</p>\n            <div className={classes.sexField}>\n              <label htmlFor=\"sexinput\"\n                className={classes.InputField} >\n\n                <input\n                  id=\"sexinput\"\n                  type=\"radio\"\n                  value=\"Male\"\n                  name=\"sex\"\n                  required\n                  checked={sex === 'Male' ? true : false}\n                  disabled={editIco ? false : true}\n\n                  onClick={(e) => {\n\n                    setSex(e.target.value)\n                    console.log('Male', sex)\n                  }}\n                />\n        Male\n        </label>\n\n              <label htmlFor=\"sexinputf\"\n                className={classes.InputField}  >\n                <input\n                  id=\"sexinputf\"\n                  type=\"radio\"\n                  value=\"Female\"\n                  name=\"sex\"\n                  disabled={editIco ? false : true}\n                  required\n                  checked={sex === 'Female' ? true : false}\n                  onClick={(e) => {\n\n                    setSex(e.target.value)\n                    console.log('male', sex)\n                  }}\n                />\n        Female\n        </label>\n            </div>\n\n            <label htmlFor=\"bloodGroup\"\n              className={`${classes.InputField} ${classes.Dateofbirth}`} >Blood Group</label>\n            <select required disabled={editIco ? false : true}\n              onChange={e => setBloodGroup(e.target.value)}\n            >\n              <option value={bloodGroup}>{bloodGroup}</option>\n              <option value=\"A- (Negative)\">A- (Negative)</option>\n              <option value=\"A+ (Positive)\">A+ (Positive)</option>\n              <option value=\"B+ (Positive)\">B+ (Positive)</option>\n              <option value=\"B- (Negative)\">B- (Negative)</option>\n              <option value=\"O+ (Positive)\">O+ (Positive)</option>\n              <option value=\"O- (Negative)\">O- (Negative)</option>\n              <option value=\"AB+ (Positive)\">AB+ (Positive)</option>\n              <option value=\"AB- (Negative)\">AB- (Negative)</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"residence\"\n              className={classes.InputField} >Residence</label>\n            <select required disabled={editIco ? false : true}\n\n              onChange={e => setResidence(e.target.value)}\n            >\n              <option value={residence}>{residence}</option>\n              <option value=\"With Parent\">With Parent</option>\n              <option value=\"With Relatives\">With Relatives</option>\n              <option value=\"College Hostel\">College Hostel</option>\n              <option value=\"Lodge\">Lodge</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"relationshipwithguardien\"\n              className={classes.InputField} >Relationship With Guardian</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              disabled={editIco ? false : true}\n              value={relationGuardin}\n              onChange={e => {\n\n                setRelationGuardin(e.target.value)\n              }}\n\n              required />\n\n            <label htmlFor=\"Ocupationofguardien\"\n              className={classes.InputField} >Ocupation of Guardien</label>\n            <input type=\"text\"\n              /* pattern=\"[A-Za-z]\" */\n              disabled={editIco ? false : true}\n              required\n              value={occupationOfGuardian}\n              onChange={e => {\n\n                setOccuptinofGurdian(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"religion\"\n              className={classes.InputField} >Religion</label>\n            <input type=\"text\"\n              required\n              disabled={editIco ? false : true}\n              value={religion}\n              onChange={e => {\n\n                setReligion(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"cast\"\n              className={classes.InputField} >Cast</label>\n            <input type=\"text\"\n              required\n              disabled={editIco ? false : true}\n              value={cast}\n              onChange={e => {\n\n                setCast(e.target.value)\n\n              }}\n\n            />\n\n            <label htmlFor=\"mail\"\n              className={classes.InputField} >E-Mail</label>\n            <input type=\"mail\"\n              disabled={editIco ? false : true}\n              value={email}\n              onChange={e => {\n\n                setEmail(e.target.value)\n\n              }}\n            />\n\n            <p>Martial Status</p>\n            <div className={classes.martialstatus}>\n              <label htmlFor=\"martial\"\n                className={classes.InputField} >\n                <input\n                  id=\"martial\"\n                  type=\"radio\"\n                  value=\"True\"\n                  name=\"martial\"\n                  required\n                  checked={maritalStatus ? true : false}\n                  disabled={editIco ? false : true}\n                  onClick={() => setMaritalStatus(true)}\n                />\n        True\n        </label>\n\n              <label htmlFor=\"martialf\"\n                className={classes.InputField} >\n                <input\n                  id=\"martialf\"\n                  type=\"radio\"\n                  value=\"False\"\n                  name=\"martial\"\n                  required\n                  checked={!maritalStatus ? true : false}\n\n                  disabled={editIco ? false : true}\n                  onClick={() => {\n                    setMaritalStatus(false)\n                    console.log(maritalStatus);\n                  }}\n                />\n        False\n        </label>\n            </div>\n\n            <label htmlFor=\"specialproblem\"\n              className={classes.InputField} >Special Problem</label>\n            <input type=\"text\"\n              disabled={editIco ? false : true}\n              value={specialProblem}\n              onChange={e => {\n                setSpecialProblem(e.target.value)\n              }}\n            />\n\n            <p className={classes.MainHead}>Responsible Guardian Info</p>\n\n            <label htmlFor=\"name\"\n              className={classes.InputField} >Name</label>\n            <input type=\"text\"\n              disabled={editIco ? false : true}\n              value={responsibleGuardianName}\n              onChange={e => {\n                setResponsibleGuardianName(e.target.value)\n              }}\n\n              required\n            />\n\n            <label htmlFor=\"relationship\"\n              className={classes.InputField} >Relationship</label>\n            <input type=\"text\"\n              required\n              disabled={editIco ? false : true}\n              value={responsibleGuardianRelation}\n              onChange={e => {\n                setResponsibleGuardianRelation(e.target.value)\n              }}\n            />\n\n            <label htmlFor=\"age\"\n              className={classes.InputField} >Age</label>\n            <input type=\"number\"\n              disabled={editIco ? false : true}\n              value={responsibleGuardianAge}\n              onChange={e => {\n                setResponsibleGuardianAge(e.target.value)\n              }}\n              required\n            />\n\n            <label htmlFor=\"guardianmobno\"\n              className={classes.InputField} >Mobile Number</label>\n            <input type=\"number\"\n              disabled={editIco ? false : true}\n              required\n              value={responsibleGuardianMob}\n              onChange={e => {\n                setResponsibleGuardianMob(e.target.value)\n              }}\n            />\n\n            <label htmlFor=\"occupation\"\n              className={classes.InputField} >Occupation</label>\n            <input type=\"text\"\n            value={responsibleGuardianOccupation}\n            onChange={e=>setresponsibleGuardianOccupation(e.target.value)}\n              disabled={editIco ? false : true}\n            />\n\n            <p className={classes.MainHead}>Qualification Info</p>\n\n            <p>Extra Curricular Activities</p>\n            <div className={classes.extrac}>\n              <label htmlFor=\"extracA\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracA\"\n                  type=\"checkbox\"\n                  value=\"Arts\"\n                  disabled={editIco ? false : true}\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n\n                    console.log('etc', etc);\n                  }}\n\n                />\n        Arts\n        </label>\n\n              <label htmlFor=\"extracS\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracS\"\n                  type=\"checkbox\"\n                  value=\"Sports\"\n                  disabled={editIco ? false : true}\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n                    console.log('etc', etc);\n\n                  }}\n                />\n        Sports\n        </label>\n\n              <label htmlFor=\"extracN\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracN\"\n                  type=\"checkbox\"\n                  value=\"NCC\"\n                  disabled={editIco ? false : true}\n                  name=\"extrac\"\n                  onChange={e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n                    console.log('etc', etc);\n\n                  }}\n                />\n        NCC\n        </label>\n\n              <label htmlFor=\"extracSS\"\n                className={classes.InputField} >\n                <input\n                  id=\"extracSS\"\n                  type=\"checkbox\"\n                  value=\"NSS\"\n                  disabled={editIco ? false : true}\n                  name=\"extrac\"\n                  onChange={async e => {\n                    console.log(e.target.checked);\n                    e.target.checked ? etc.push(e.target.value) :\n                      etc = etc.filter(function (item) {\n                        return item !== e.target.value\n                      })\n\n                    console.log('etc', etc, 'a', etcActivity);\n                  }}\n                />\n        NSS\n        </label>\n            </div>\n\n            <label htmlFor=\"SpecialAchievments\"\n              className={classes.InputField} >Special Achievments</label>\n            <input type=\"text\"\n              disabled={editIco ? false : true}\n              value={specialAchiev}\n              onChange={e => setSpecialAchiev(e.target.value)}\n            />\n\n            <label htmlFor=\"paper\"\n              className={classes.InputField} >SSLC/CBSE mark (%)\n      </label>\n            <input\n              disabled={editIco ? false : true}\n              type=\"number\"\n              required\n              value={sslc}\n              onChange={e => setSslc(e.target.value)}\n            />\n\n            <label htmlFor=\"hsemark\"\n              className={classes.InputField} >HSE Paper (,)\n      </label>\n            <input\n              type=\"text\"\n              disabled={editIco ? false : true}\n              value={prevCourse}\n              onChange={e => setPrevCourse(e.target.value)}\n              required\n            />\n\n            <label htmlFor=\"hsemark\"\n              className={classes.InputField} >HSE/CBSE mark (%)\n      </label>\n            <input\n              disabled={editIco ? false : true}\n              type=\"number\"\n              required\n              value={hss}\n              onChange={e => setHss(e.target.value)}\n            />\n\n\n            <label htmlFor=\"institution\"\n              className={classes.InputField} >Institution last attended\n      </label>\n            <input\n              disabled={editIco ? false : true}\n              type=\"text\"\n              value={prevShool}\n              onChange={e => setPrevshool(e.target.value)}\n              required\n            />\n\n            <p className={classes.MainHead}>Admission Info</p>\n\n            <label htmlFor=\"admissionsecured\"\n              className={classes.InputField}>admission secured</label>\n            <select required disabled={editIco ? false : true}\n              onChange={e =>setAdmissionSecured(e.target\n                .value)}\n            >\n              <option value={admissionSecured}>{admissionSecured}</option>\n              <option value=\"Management\">Management</option>\n              <option value=\"Merit\">Merit</option>\n              <option value=\"Muslim\">Muslim</option>\n              <option value=\"SC/ST\">SC/ST</option>\n              <option value=\"OBC/OEC\">OBC/OEC</option>\n              <option value=\"Other\">Other</option>\n            </select>\n\n            <label htmlFor=\"Course\"\n              className={classes.InputField}>Course</label>\n            <select required disabled={editIco ? false : true} onChange={e => {\n              setSub(e.target.value)\n            }} >\n              <option value={sub}>{sub}</option>\n\n              <option value=\"BSC computer science\">BSC computer science</option>\n              <option value=\"BSC Physics\">BSC Physics</option>\n              <option value=\"BSC Microbiology\">BSC Microbiology</option>\n              <option value=\"BSC Maths\">BSC Maths</option>\n              <option value=\"BSC Chemistry\">BSC Chemistry</option>\n              <option value=\"BCA\">BCA</option>\n              <option value=\"BBA\">BBA</option>\n              <option value=\"BCOM TT\">BCOM TT</option>\n              <option value=\"BCOM CA\">BCOM CA</option>\n              <option value=\"BCOM Finance\">BCOM Finance</option>\n              <option value=\"BCOM Islamic Finance\">BCOM Islamic Finance</option>\n              <option value=\"BA Multimedia\">BA Multimedia</option>\n              <option value=\"BA Mass Communication\">BA Mass Communication</option>\n              <option value=\"BA English\">BA English</option>\n              <option value=\"BA Arabic\">BA Arabic</option>\n              <option value=\"BA Hindi\">BA Hindi</option>\n              <option value=\"BA Malayalam\">BA Malayalam</option>\n            </select>\n\n            <label htmlFor=\"Sem\"\n              className={classes.InputField}>Sem</label>\n            <select required disabled={editIco ? false : true}\n            \n            onChange={e=>{\n              setSem(e.target.value)\n            }}\n            >\n\n            <option value={sem}>{sem}</option>\n              <option value=\"First\">First</option>\n              <option value=\"Second\">Second</option>\n              <option value=\"Third\">Third</option>\n              <option value=\"Fourth\">Fourth</option>\n              <option value=\"Fifth\">Fifth</option>\n              <option value=\"Sixth\">Sixth</option>\n            </select>\n           \n\n            <label htmlFor=\"admno\"\n              className={classes.InputField} >Admission Number\n      </label>\n            <input\n              disabled={editIco ? false : true}\n              type=\"number\"\n              required\n              value={admno}\n              onChange={e => setAdmno(e.target.value)}\n            />\n\n\n            <label htmlFor=\"batch\"\n              className={classes.InputField} >Batch\n      </label>\n            <input\n              disabled={editIco ? false : true}\n              type=\"text\"\n              required\n              value={batch}\n              onChange={e => setBatch(e.target.value)}\n            />\n\n          </div>\n          {\n            editIco ? <input ref={saveBtn} type=\"submit\" value={bValue}\n              disabled={bValue === 'Uploading...' ? true : false}\n              className={classes.Submit} /> : null\n          }\n\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default StudentEditForm\n\n","/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/Nav.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/StudentNav.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Footer/Footer.js",["118"],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Addbutton/Addbutton.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentCard/StudentCard.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/StudentAdd/key.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/Option.js",[],"/Users/nizamkolathoden/mascStudent-DB-backend/host/src/Components/User/Navigation/Menu.js",[],{"ruleId":"119","severity":1,"message":"120","line":17,"column":11,"nodeType":"121","messageId":"122","endLine":17,"endColumn":16},{"ruleId":"123","severity":1,"message":"124","line":28,"column":6,"nodeType":"125","endLine":28,"endColumn":8,"suggestions":"126"},{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"119","severity":1,"message":"131","line":4,"column":9,"nodeType":"121","messageId":"122","endLine":4,"endColumn":19},{"ruleId":"119","severity":1,"message":"132","line":31,"column":25,"nodeType":"121","messageId":"122","endLine":31,"endColumn":41},{"ruleId":"119","severity":1,"message":"133","line":38,"column":23,"nodeType":"121","messageId":"122","endLine":38,"endColumn":37},{"ruleId":"119","severity":1,"message":"134","line":45,"column":23,"nodeType":"121","messageId":"122","endLine":45,"endColumn":37},{"ruleId":"135","severity":1,"message":"136","line":241,"column":13,"nodeType":"137","endLine":241,"endColumn":78},{"ruleId":"119","severity":1,"message":"132","line":37,"column":25,"nodeType":"121","messageId":"122","endLine":37,"endColumn":41},{"ruleId":"119","severity":1,"message":"133","line":44,"column":23,"nodeType":"121","messageId":"122","endLine":44,"endColumn":37},{"ruleId":"119","severity":1,"message":"138","line":51,"column":10,"nodeType":"121","messageId":"122","endLine":51,"endColumn":14},{"ruleId":"119","severity":1,"message":"139","line":51,"column":16,"nodeType":"121","messageId":"122","endLine":51,"endColumn":23},{"ruleId":"119","severity":1,"message":"140","line":133,"column":9,"nodeType":"121","messageId":"122","endLine":133,"endColumn":16},{"ruleId":"123","severity":1,"message":"141","line":218,"column":6,"nodeType":"125","endLine":218,"endColumn":8,"suggestions":"142"},{"ruleId":"143","severity":1,"message":"144","line":266,"column":9,"nodeType":"145","messageId":"146","endLine":271,"endColumn":10},{"ruleId":"135","severity":1,"message":"136","line":296,"column":13,"nodeType":"137","endLine":296,"endColumn":78},{"ruleId":"119","severity":1,"message":"147","line":2,"column":8,"nodeType":"121","messageId":"122","endLine":2,"endColumn":16},"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["148"],"no-native-reassign",["149"],"no-negated-in-lhs",["150"],"'useHistory' is defined but never used.","'setAgeOfGuardian' is assigned a value but never used.","'setEtcActivity' is assigned a value but never used.","'setRecommanted' is assigned a value but never used.","jsx-a11y/alt-text","Invalid alt value for img. Use alt=\"\" for presentational images.","JSXOpeningElement","'live' is assigned a value but never used.","'setLive' is assigned a value but never used.","'postPic' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'id' and 'token'. Either include them or remove the dependency array.",["151"],"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'iedcLogo' is defined but never used.",{"desc":"152","fix":"153"},"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},"Update the dependencies array to be: [dispatch, history]",{"range":"156","text":"157"},"Update the dependencies array to be: [id, token]",{"range":"158","text":"159"},[1122,1124],"[dispatch, history]",[6924,6926],"[id, token]"]